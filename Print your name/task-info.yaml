type: remote_edu
files:
- name: main.go
  visible: true
  text: "package main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello! My\
    \ name is Aid.\")\n\tfmt.Println(\"I was created in 2020.\")\n\tfmt.Println(\"\
    Please, remind me your name.\")\n\n\t// reading a name\n\n\tfmt.Println(\"What\
    \ a great name you have, \" + name + \"!\")\n}\n"
  learner_created: false
- name: tests.py
  visible: false
  text: |
    from hstest.stage_test import *
    from hstest.test_case import TestCase

    CheckResult.correct = lambda: CheckResult(True, '')
    CheckResult.wrong = lambda feedback: CheckResult(False, feedback)


    class ChattyBotTest(StageTest):
        def generate(self) -> List[TestCase]:
            return [
                TestCase(stdin="John", attach="John"),
                TestCase(stdin="Nick", attach="Nick")
            ]

        def check(self, reply: str, clue: Any) -> CheckResult:
            lines = reply.strip().splitlines()
            if len(lines) != 4:
                return CheckResult.wrong(
                    "You should output 4 lines!\n" +
                    f"Lines found: {len(lines)}"
                    f"Your output:\n"
                    f"{reply.strip()}"
                )

            line_with_name = lines[3].lower()
            name = clue.lower()

            if name not in line_with_name:
                return CheckResult.wrong(
                    "The name was " + clue + "\n" +
                    "But the 4-th line was:\n" +
                    "\"" + lines[3] + "\"\n\n" +
                    "4-th line should contain a name of the user"
                )

            return CheckResult.correct()


    if __name__ == '__main__':
        ChattyBotTest().run_tests()
  learner_created: false
feedback_link: https://hyperskill.org/projects/206/stages/1028/implement#comment
check_profile: hyperskill_go
status: Solved
feedback:
  message: <html>Correct solution</html>
  time: "Wed, 25 Jan 2023 22:15:00 UTC"
record: 2
